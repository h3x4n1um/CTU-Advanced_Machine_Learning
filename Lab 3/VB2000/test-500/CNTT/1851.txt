SQL Server 2008 đã giới thiệu một số kiểu dữ liệu mới giúp mở rộng đối tượng làm việc và cải tiến khả năng thực thi của SQL Server. Ví dụ, kiểu User-Defined Table (bảng do người dùng định nghĩa) và Table-Valued Parameter cho phép người dùng đưa một nhóm kết quả vào một thủ tục và lưu nhiều giá trị trả về lên máy chủ, trong khi kiểu dữ liệu Date và Time có thể giúp tiết kiệm tài nguyên bộ nhớ vì chiếm dụng ít bộ nhớ hơn trong trường hợp người dùng chỉ cần lưu ngày hay giờ, và giúp thao tác dễ dàng hơn khi làm việc với chúng. Trong phần này chúng ta sẽ tập trung tìm hiểu hai kiểu dữ liệu này, về phạm vi sử dụng và khả năng ứng dụng.
User-Defined Table Type (UDTT) và Table-Value Parameter (TVP)
Với SQL Server 2008 chúng ta có thể tạo một UDTT (kiểu bảng do người dùng định nghĩa) theo định nghĩa cấu trúc bảng. Để đảm bảo rằng mọi dữ liệu trong UDTT đáp ứng được mọi tiêu chí, chúng ta có thể tạo những rằng buộc riêng và những khóa chính trên kiểu bảng này. Ngoài ra, chúng ta có thể sử dụng một UDTT để khai báo nhiều TVP (tham số do bảng định giá trị) cho các công cụ hay thủ tục lưu trữ để gửi nhiều bản ghi dữ liệu tới một thủ tục lưu trữ hay một công cụ mà không phải tạo một bảng tạm thời hay nhiều tham số.
TVP giờ đây linh hoạt hơn rất nhiều, và trong một số trường hợp nó còn có khả năng thực thi tốt hơn những bảng tạm thời hay cung cấp nhiều phương pháp khác nhau để không phải sử dụng đến các tham số. Sử dụng TVP có các lợi ích sau, không sử dụng khóa cho mẫu dữ liệu ban đầu từ máy trạm, không cần phải biên tập lại lệnh, giảm truy cập tới máy chủ, cho phép máy trạm chỉ định thứ tự sắp xếp và những khóa chính, …
Khi các biến của bảng được được chuyển tác như những tham số thì bảng này sẽ được hiên thực hóa trong cơ sở dữ liệu hệ thống tempdb hơn là chuyển tác toàn bộ nhóm dữ liệu trong bộ nhớ, điều này giúp việc xử lý với lượng dữ liệu lớn hiệu quả hơn. Mọi máy chủ thực hiện chuyển tác các tham số biến thiên của bảng được chuyển tác bởi tham chiếu, sử dụng tham chiếu này như một con trỏ tới bảng đó trong tempdb để tránh tạo bản sao cho dữ liệu đầu vào.
Ứng dụng
Các lập trình viên luôn gặp phải rắc rối khi chuyển nhiều bản ghi trong cơ sở dữ liệu để tận dụng tối đa khả năng thực thi. Ví dụ, khi một lập trình viên cần lập trình cho trang chấp nhận thứ tự gồm nhiều mục thì họ sẽ phải viết theo logic riêng để nhóm mọi lệnh chèn thàng một chuỗi định giới hay kiêu XML (OPENXML trong SQL Server 2000) rồi chuyển những giá trị văn bản đó sang một thủ tục hay lệnh. Thao tác này yêu cầu thủ tục hay lệnh đó phải có logic cần thiết cho việc tháo nhóm những giá trị và làm cho những cấu trúc dữ liệu có hiệu lực, sau đó tiến hành chèn các bản ghi. Quá nhiều thao tác cần thực hiện nhưng lại không tối ưu, trong trường hợp này chúng ta có thể sử dụng TVP để chuyển một bảng dữ liệu gồm nhiều bản ghi từ ứng dụng .NET sang SQL Server và chèn trực tiếp vào bảng mà không phải thực hiện thêm bất kì thao tác nào tại máy chủ này.
Hạn chế
UDTT tồn tại một số hạn chế, ví dụ nó không thể sử dụng như một cột trong bản, định dạng bảng không thể thay đổi sau khi đã được tạo, một giá trị mặc định không thể được chỉ định trong định dạng của UDTP, …
SQL Server không duy trì thống kê các cột của TVP.
TVP phải được chuyển như những tham số READONLY nhập vào sang những lệnh T-SQL. Chúng ta không thể thực hiện các tác vụ DML như UPDATE (cập nhật), DELETE (xóa), hay INSERT (chèn) trên một TVP trong phần chính của lệnh. Nếu cần phải thay đổi dữ liệu được chuyển tới một thủ tục lưu trữ hay lệnh biểu hiện tham số trong TVP thì chúng ta phải chèn dữ liệu đó vào một bảng tạm thời bay một biến của bảng. Ngoài ra, chúng ta không thể sử dụng các biến của bảng như các tham số OUTPUT (kết xuất), mà chỉ có thể sử dụng như các tham số INPUT (nhập vào).
Trong ví dụ này chúng ta sẽ tìm hiểu phương pháp tạo một kiểu bảng do người dùng định nghĩa, tạo một biến của kiểu bảng này, chèn các bản ghi vào bảng và chuyển nó tới thủ tục lưu trữ như một tham số TVP.
Trước tiên chúng ta sẽ tạo một bảng và chèn các bản gi vào đó. Cấu trúc lệnh tạo bảng này như sau:
Tiếp theo chúng ta sẽ tạo một UDTT khi đã tạo thành công chúng ta có thể xem chi tiết bảng sử dụng hai System Catalog View:
Chúng ta cũng có thể sử dụng SQL Server Management Studio (SSMS) để xem các bảng người dùng định nghĩa đã được tạo trong một cơ sở dữ liệu, truy cập vào node User-Defined Table Types trong node Types cửa bảng Object Explorer.
Sau đó tạo một thủ tục lưu trữ để chuyển tác biến của UDTT như một TVP. Cần nhớ quy tắc phạm vi cho một biến được áp dụng trong trường hợp này cũng như với biến của UDTT vì biến này sẽ tự động vượt quá phạm vi khi bảng được tạo.