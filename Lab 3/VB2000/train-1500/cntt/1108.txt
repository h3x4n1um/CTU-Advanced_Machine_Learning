Kết quả trả về sẽ là toàn bộ user trong Database và dĩ nhiên đây là một trường hợp Login không hợp lệ (biến password cũng có thể sữ dụng để tạo SQL Injection) . Thực ra, lỗi trên là do biến $username, có thể fix bằng cách kiểm tra biến user, rồi sau đó mới kiểm tra biến pass, hoặc một cách nhanh hơn, fix được hầu hết tất cả các lỗi SQL Injection mà chỉ cần sữ dụng một hàm có sẵn của PHP, đó là hàm addslashes.
Như vậy thì câu lệnh SQL sẽ hoạt động đúng như chức năng của nó . Một số lỗi SQL Injection khác cũng có thể khắc phục bằng phương pháp này. Tôi cũng xin nhắc lại là phương pháp này chỉ fix được hầu hết tất cả các lỗi SQL Injection, tức là các lỗi do biến PHP gây ra, còn các lỗi do bản thân câu lệnh SQL thì cách này không có hiệu quả gì. Tuy nhiên nếu dùng phương pháp này và câu lệnh SQL chắc chắn thì tôi tin rằng bạn sẽ không còn lo lắng về SQL Injection.
Header là một hàm khác hay của PHP, hàm này sẽ send raw HTTP Header. Bạn có thể tìm tài liệu về HTTP Header trên rất nhiều diễn đàn lập trình khác. Trong bài viết này tôi sẽ đề cập đến một số header thông dụng.
Đây là một header rất hay của PHP, nó sẽ tạo ra một bảng Login và yêu cầu nhập Username và Password, rất thích hợp cho trang dành cho các vùng hạng chế.
Chú ý khi sử dụng Header: header phải được gọi trước khi đưa nội dung vào trang, vì header phải được gửi trước khi gửi nội dung của trang hoặc bạn sẽ nhận được lỗi thông báo về Header, tuy nhiên bạn có thể tranh lỗi này bằng sữ dụng Output buffering mà tôi sẽ đề cập sau đây.
Cũng như ASP, PHP cũng có chức năng tạo bộ đệm trang và chức năng này mạnh hơn rất nhiều so với ASP nhưng lại đòi hỏi cấu hình PHP. Tuy nhiên chức năng này hoạt động hầu hết trên Server mà không cần phải cấu hình lại PHP. Bạn có thể sử dụng các hàm Buffer của PHP hoặc tự tạo bộ đệm cho mình. Sử dụng Buffer sẽ giúp cho bạn tránh được lỗi header và có thể thay đổi nội dung của trang nhưng nó cũng yêu cầu một Server tốt, vì mỗi lần Buffer thì nó sẽ ghi vào bộ nhớ hay File.
Một cách khác để sử dụng Buffer là tạo một biến để chứa nội dung của trang trước khi đưa nội dung của trang ra. Cách này hơi tốn công so với sử dụng hàm của PHP nhưng nó đơn giản và không bị hạn chế.
PHP là một ngôn ngữ Web mạnh, nhưng nó lại có một thiếu sót rất lớn là tìm kiếm trong Array, hầu hết các hàm của PHP chỉ sử dụng khi ta biết rõ là key hay value đó hoặc có hoặc không trong Array đó, không thể nào tìm kiếm các key hay value liên quan hay hơi giống hay không phân biệt chữ hoa và chữ thường (sensitive) so với chuổi cần tìm.